%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1        
num_of_cam: 2  

imu_topic: "/airsim_node/drone_1/imu/imu"
image0_topic: "/airsim_node/drone_1/front_left/Scene"
image1_topic: "/airsim_node/drone_1/front_right/Scene"
# image0_topic: "/airsim_node/drone_1/front_left/DepthVis"
# image1_topic: "/airsim_node/drone_1/front_right/DepthVis"

output_path: "~/output/"

cam0_calib: "cam0_pinhole.yaml"
cam1_calib: "cam1_pinhole.yaml"
# image_width: 480
# image_height: 360
image_width: 640
image_height: 480
# image_width: 960
# image_height: 720

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# imu or camera ned
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0, 0, 1, 0.175,
           1, 0, 0, -0.15,
           0, 1, 0, 0,
           0, 0, 0, 1]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0, 0, 1, 0.175,
           1, 0, 0, 0.15,
           0, 1, 0, 0,
           0, 0, 0, 1]

## camera
# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [0, 0, 1, 0.175,
#            -1, 0, 0,  0.15,
#            0, -1, 0, 0,
#            0, 0, 0, 1]

# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [0, 0, 1, 0.175,
#            -1, 0, 0, -0.15,
#            0, -1, 0, 0,
#            0, 0, 0, 1]



# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [1, 0, 0, 0.175,   # X轴上的平移
#            0, 1, 0, -0.15,      # Y轴上的平移
#            0, 0, 1, 0,    # Z轴上的平移
#            0, 0, 0, 1]       # 旋转部分都为单位矩阵

# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [1, 0, 0, 0.175,    # X轴上的平移（基线为95mm）
#            0, 1, 0, 0.15,             # Y轴上的平移
#            0, 0, 1, 0,          # Z轴上的平移
#            0, 0, 0, 1]             # 旋转部分都为单位矩阵


#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking 150
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

# //(重力， P_位置不确定度_std, P_速度不确定度_std, P_角度不确定度_std, P_角速度bias不确定度_std, P_加速度bias不确定度_std,
# //gps位置测量噪声_std gpsz姿态测量噪声_std, imu角速度测量噪声_std, imu加速度测量噪声_std)
# g_eskf_ptr = new ErrorStateKalmanFilter(-9.81083, 0.1, 0.1, 0.1, 0.0003158085227, 0.001117221, 0.5*10, 1.0, 0.00143, 0.0386);

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

# #imu parameters       The more accurate parameters you provide, the better performance
acc_w: 0.001        # accelerometer bias random work noise standard deviation.
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.    
gyr_n: 0.01         # gyroscope measurement noise standard deviation.  
acc_n: 0.1          # accelerometer measurement noise standard deviation. 
g_norm: 9.81083      # 重力加速度 (AirSim 默认值)

# # acc_n: 0.13936422724868158        # accelerometer measurement noise standard deviation. 
# # gyr_n: 0.03641488321587604         # gyroscope measurement noise standard deviation. 
# # acc_w: 0.0012394997156063813        # accelerometer bias random work noise standard deviation.  
# # gyr_w: 0.002724162041914378      # gyroscope bias random work noise standard deviation.   

acc_n: 0.0386      # accelerometer measurement noise standard deviation.   
gyr_n: 0.00143         # gyroscope measurement noise standard deviation.  
acc_w: 0.001117221        # accelerometer bias random work noise standard deviation.  
gyr_w: 0.0003158085227      # gyroscope bias random work noise standard deviation.     
g_norm: 9.81083      # 重力加速度 (AirSim 默认值)




# poe
# acc_n: 0.015         # 加速度计测量噪声标准差 (基于数据调整)
# gyr_n: 0.0012       # 陀螺仪测量噪声标准差 (基于数据调整)
# acc_w: 0.0001        # 加速度计随机游走噪声 (模拟器建议更低)
# gyr_w: 0.000015      # 陀螺仪随机游走噪声 (模拟器建议更低)
# g_norm: 9.81083      # 重力加速度 (AirSim 默认值)

# new
# acc_n: 0.04          # 加速度计测量噪声标准差 (基于x,y轴标准差计算)
# gyr_n: 0.002         # 陀螺仪测量噪声标准差 (基于各轴标准差取平均)
# acc_w: 0.0001        # 加速度计随机游走 (模拟器建议更低值)
# gyr_w: 0.00003       # 陀螺仪随机游走 (略高于原值以适配数据波动)
# g_norm: 9.81083      # 重力加速度保持不变

# old
# acc_n: 0.021         # 加速度计测量噪声标准差 (合理范围: 0.01~0.05)
# gyr_n: 0.0015        # 陀螺仪测量噪声标准差 (合理范围: 0.001~0.005)
# acc_w: 0.0002        # 加速度计随机游走噪声 (模拟器建议更低, 0.0001~0.001)
# gyr_w: 0.00002       # 陀螺仪随机游走噪声 (模拟器建议更低, 1e-5~1e-4)
# g_norm: 9.81083      # 重力加速度 (AirSim 默认值)
#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 0                  # save image in pose graph for visualization prupose; you can close this function by setting 0 